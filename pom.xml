<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>us.hebi.matlab</groupId>
    <artifactId>tools-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>MatlabTools Parent</name>
    <description>
        Collection of Java libraries for interfacing with MATLAB
    </description>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>ennerf</id>
            <name>Florian Enner</name>
            <email>florian@hebirobotics.com</email>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/HebiRobotics/MatlabTools</url>
        <connection>scm:git:git://github.com/HebiRobotics/MatlabTools.git</connection>
        <developerConnection>scm:git:git@github.com:HebiRobotics/MatlabTools.git</developerConnection>
    </scm>

    <!-- Modules -->
    <modules>
        <module>io</module>
    </modules>

    <properties>

        <!-- Dependency versions. KEEP IN ALPHABETICAL ORDER-->
        <junit.version>4.12</junit.version>

        <!-- Other Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Set Syntax level to Java9 so that IDEs don't complain about the module-info.java
         and so we can use try-with-resources and Lambdas in test Syntax -->
        <maven.compiler.source>9</maven.compiler.source>
        <maven.compiler.target>9</maven.compiler.target>

        <!-- Set the actual target to minimum Java version compatible with Matlab >2009a -->
        <matlab.target>1.6</matlab.target>

        <!-- GPG / Release process (set via settings.xml) -->
        <gpg.passphrase></gpg.passphrase>

    </properties>

    <!-- Dependency management. KEEP IN ALPHABETICAL ORDER-->
    <dependencyManagement>
        <dependencies>

            <dependency> <!-- Unit Tests -->
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>

                <!-- Compile in 2 stages so we can get Java9 module-info w/ target sources -->
                <!-- https://maven.apache.org/plugins/maven-compiler-plugin/examples/module-info.html -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <executions>

                        <!-- 1) default-compile: Compile everything w/ Java 9 to make sure the module-info is correct -->
                        <!-- (called implicitly) -->

                        <!-- 2) default-testCompile: Compile tests w/ Java 9 so we can use advanced syntax -->
                        <!-- (called implicitly) -->

                        <!-- 3) Re-compile everything for target VM except the module-info.java -->
                        <execution>
                            <id>target-compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <!-- Note:
                                Do not set "<release>6</release>" as that disables jdk.unsupported! It will also
                                ignore the module-info.java file as well as disable the manual 'add-module' compiler
                                argument, which makes it impossible to use sun.misc.Unsafe. After a lot of tinkering,
                                the only way I got it to work was to have an existing module-info from the previous
                                compilation step, and to revert to just using the 'target' & 'source' options. -->
                                <source>${matlab.target}</source>
                                <target>${matlab.target}</target>
                                <excludes>
                                    <exclude>module-info.java</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Add Sources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Add Javadoc -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.0.1</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadoc</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Deploy -->
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Release -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <localCheckout>true</localCheckout>
                        <pushChanges>false</pushChanges>
                        <mavenExecutorId>forked-path</mavenExecutorId>
                        <arguments>-Dgpg.passphrase=${gpg.passphrase}</arguments>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.scm</groupId>
                            <artifactId>maven-scm-provider-gitexe</artifactId>
                            <version>1.11.1</version>
                        </dependency>
                    </dependencies>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- Java < 9: ignore module-info-->
        <profile>
            <id>noJava9</id>
            <activation>
                <!-- https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html -->
                <!--<jdk>(,9)</jdk>--> <!-- makes IntelliJ 2018.2 always default to 1.6 sources, so do manually -->
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <version>3.8.0</version>
                            <configuration>
                                <excludes>
                                    <exclude>module-info.java</exclude>
                                </excludes>
                                <source>${matlab.target}</source>
                                <target>${matlab.target}</target>
                                <testSource>8</testSource>
                                <testTarget>8</testTarget>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <!-- GPG Signature on release -->
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <!-- Distribute to Maven Central -->
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/
            </url>
        </repository>
    </distributionManagement>

</project>
